<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoGeneratedRunConfigurationManager">
    <projectFile>LibHtmlNet/LibHtmlNet.csproj</projectFile>
  </component>
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="361e1822-f7d2-41b5-bb5c-3615446aed8d" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/.idea/.idea.LibHtmlNet/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/.idea.LibHtmlNet/.idea/.gitignore" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/.idea.LibHtmlNet/.idea/discord.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/.idea.LibHtmlNet/.idea/encodings.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/.idea.LibHtmlNet/.idea/git_toolbox_prj.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/.idea.LibHtmlNet/.idea/indexLayout.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/.idea.LibHtmlNet/.idea/vcs.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/LibHtmlNet.sln" beforeDir="false" afterPath="$PROJECT_DIR$/HTML.NET.sln" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/LibHtmlNet/.gitignore" beforeDir="false" afterPath="$PROJECT_DIR$/HTMLParser/.gitignore" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/LibHtmlNet/Dockerfile" beforeDir="false" afterPath="$PROJECT_DIR$/HTMLParser/Dockerfile" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/LibHtmlNet/LibHtmlNet.csproj" beforeDir="false" afterPath="$PROJECT_DIR$/HTMLParser/HTMLParser.csproj" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/LibHtmlNet/src/ByteBuffer.cs" beforeDir="false" afterPath="$PROJECT_DIR$/HTMLParser/src/ByteBuffer.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/LibHtmlNet/src/Parser/HTMLTokenizer.States.cs" beforeDir="false" afterPath="$PROJECT_DIR$/HTMLParser/src/Parser/HTMLTokenizer.States.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/LibHtmlNet/src/Parser/HTMLTokenizer.cs" beforeDir="false" afterPath="$PROJECT_DIR$/HTMLParser/src/Parser/HTMLTokenizer.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/LibHtmlNet/src/Parser/Tokens/CharacterToken.cs" beforeDir="false" afterPath="$PROJECT_DIR$/HTMLParser/src/Parser/Tokens/CharacterToken.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/LibHtmlNet/src/Parser/Tokens/CommentToken.cs" beforeDir="false" afterPath="$PROJECT_DIR$/HTMLParser/src/Parser/Tokens/CommentToken.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/LibHtmlNet/src/Parser/Tokens/DOCTYPEToken.cs" beforeDir="false" afterPath="$PROJECT_DIR$/HTMLParser/src/Parser/Tokens/DOCTYPEToken.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/LibHtmlNet/src/Parser/Tokens/EndTagToken.cs" beforeDir="false" afterPath="$PROJECT_DIR$/HTMLParser/src/Parser/Tokens/EndTagToken.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/LibHtmlNet/src/Parser/Tokens/HTMLToken.cs" beforeDir="false" afterPath="$PROJECT_DIR$/HTMLParser/src/Parser/Tokens/HTMLToken.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/LibHtmlNet/src/Parser/Tokens/HTMLTokenType.cs" beforeDir="false" afterPath="$PROJECT_DIR$/HTMLParser/src/Parser/Tokens/HTMLTokenType.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/LibHtmlNet/src/Parser/Tokens/StartTagToken.cs" beforeDir="false" afterPath="$PROJECT_DIR$/HTMLParser/src/Parser/Tokens/StartTagToken.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/LibHtmlNet/src/Parser/Tokens/TagToken.cs" beforeDir="false" afterPath="$PROJECT_DIR$/HTMLParser/src/Parser/Tokens/TagToken.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/LibHtmlNet/src/Program.cs" beforeDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitToolBoxStore">
    <option name="projectConfigVersion" value="5" />
  </component>
  <component name="HighlightingSettingsPerFile">
    <setting file="file://$APPLICATION_CONFIG_DIR$/resharper-host/SourcesCache/7641a1a0695522e81971758464776ba68659afdcd53575f6917f7593181d9345/Dictionary.cs" root0="SKIP_HIGHLIGHTING" />
    <setting file="file://$APPLICATION_CONFIG_DIR$/resharper-host/SourcesCache/bd1d5c50194fea68ff3559c160230b0ab50f5acf4ce3061bffd6d62958e2182/ExceptionDispatchInfo.cs" root0="SKIP_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/HTMLParser/src/ByteBuffer.cs" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/HTMLParser/src/Parser/HTMLTokenizer.States.cs" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/HTMLParser/src/Parser/HTMLTokenizer.cs" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/HTMLParser/src/Parser/Tokens/CharacterToken.cs" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/HTMLParser/src/Parser/Tokens/CommentToken.cs" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/HTMLParser/src/Parser/Tokens/DOCTYPEToken.cs" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/HTMLParser/src/Parser/Tokens/EndTagToken.cs" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/HTMLParser/src/Parser/Tokens/HTMLToken.cs" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/HTMLParser/src/Parser/Tokens/HTMLTokenType.cs" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/HTMLParser/src/Parser/Tokens/StartTagToken.cs" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/HTMLParser/src/Parser/Tokens/TagToken.cs" root0="FORCE_HIGHLIGHTING" />
  </component>
  <component name="MetaFilesCheckinStateConfiguration" checkMetaFiles="true" />
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 4
}</component>
  <component name="ProjectId" id="2UFNTBg3aNx8bgwRy48VZE3GlGN" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
    &quot;git-widget-placeholder&quot;: &quot;master&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
  },
  &quot;keyToStringList&quot;: {
    &quot;rider.external.source.directories&quot;: [
      &quot;C:\\Users\\Uther\\AppData\\Roaming\\JetBrains\\Rider2023.2\\resharper-host\\DecompilerCache&quot;,
      &quot;C:\\Users\\Uther\\AppData\\Roaming\\JetBrains\\Rider2023.2\\resharper-host\\SourcesCache&quot;,
      &quot;C:\\Users\\Uther\\AppData\\Local\\Symbols\\src&quot;
    ]
  }
}</component>
  <component name="RunManager" selected=".NET Project.LibHtmlNet">
    <configuration name="LibHtmlNet" type="DotNetProject" factoryName=".NET Project">
      <option name="EXE_PATH" value="" />
      <option name="PROGRAM_PARAMETERS" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="PASS_PARENT_ENVS" value="1" />
      <option name="USE_EXTERNAL_CONSOLE" value="0" />
      <option name="USE_MONO" value="0" />
      <option name="RUNTIME_ARGUMENTS" value="" />
      <option name="PROJECT_PATH" value="$PROJECT_DIR$/HTMLParser/HTMLParser.csproj" />
      <option name="PROJECT_EXE_PATH_TRACKING" value="1" />
      <option name="PROJECT_ARGUMENTS_TRACKING" value="1" />
      <option name="PROJECT_WORKING_DIRECTORY_TRACKING" value="1" />
      <option name="PROJECT_KIND" value="DotNetCore" />
      <option name="PROJECT_TFM" value="" />
      <method v="2">
        <option name="Build" />
      </method>
    </configuration>
    <configuration name="LibHtmlNet/Dockerfile" type="docker-deploy" factoryName="dockerfile" server-name="Docker">
      <deployment type="dockerfile">
        <settings>
          <option name="imageTag" value="libhtmlnet" />
          <option name="containerName" value="libhtmlnet" />
          <option name="contextFolderPath" value="E:\projects\LibHtmlNet" />
          <option name="sourceFilePath" value="LibHtmlNet/Dockerfile" />
        </settings>
      </deployment>
      <EXTENSION ID="com.jetbrains.rider.docker.debug" isFastModeEnabled="true" isSslEnabled="false" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="dockerfile" temporary="true">
      <deployment type="dockerfile">
        <settings />
      </deployment>
      <EXTENSION ID="com.jetbrains.rider.docker.debug" isFastModeEnabled="true" isSslEnabled="false" />
      <method v="2" />
    </configuration>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="361e1822-f7d2-41b5-bb5c-3615446aed8d" name="Changes" comment="" />
      <created>1692531373686</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1692531373686</updated>
      <workItem from="1692531374725" duration="24014000" />
      <workItem from="1692648989898" duration="2531000" />
      <workItem from="1692691349249" duration="8309000" />
      <workItem from="1692717986501" duration="685000" />
      <workItem from="1692725960906" duration="5468000" />
    </task>
    <task id="LOCAL-00001" summary="Some refactoring, added HTMLTokenType.cs and removed the State enum as a single file.">
      <option name="closed" value="true" />
      <created>1692715344905</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1692715344906</updated>
    </task>
    <task id="LOCAL-00002" summary="fix: MarkupDeclarationOpenState used Consume instead of Skip after peeking">
      <option name="closed" value="true" />
      <created>1692718077869</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1692718077869</updated>
    </task>
    <option name="localTasksCounter" value="3" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="UnityCheckinConfiguration" checkUnsavedScenes="true" />
  <component name="VcsManagerConfiguration">
    <option name="CLEAR_INITIAL_COMMIT_MESSAGE" value="true" />
    <MESSAGE value="Some refactoring, added HTMLTokenType.cs and removed the State enum as a single file." />
    <MESSAGE value="fix: MarkupDeclarationOpenState used Consume instead of Skip after peeking" />
    <option name="LAST_COMMIT_MESSAGE" value="fix: MarkupDeclarationOpenState used Consume instead of Skip after peeking" />
  </component>
  <component name="XDebuggerManager">
    <pin-to-top-manager>
      <pinned-members>
        <PinnedItemInfo parentTag="Type#LibHtmlNet.HtmlTokenizer" memberName="_tokens" />
      </pinned-members>
    </pin-to-top-manager>
    <watches-manager>
      <configuration name="DotNetProject">
        <watch expression="this._tokens" />
        <watch expression="new System.Collections.Generic.ICollectionDebugView&lt;LibHtmlNet.Tokens.Token&gt;(this._tokens).Items[115]" />
        <watch expression="new System.Collections.Generic.ICollectionDebugView&lt;LibHtmlNet.Tokens.Token&gt;(this._tokens).Items[96]" />
        <watch expression="new System.Collections.Generic.ICollectionDebugView&lt;LibHtmlNet.Tokens.Token&gt;(this._tokens).Items[96]" />
      </configuration>
    </watches-manager>
  </component>
</project>